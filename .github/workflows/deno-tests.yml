name: Deno Tests

on:
  pull_request:
    branches:
      - "*"
    paths:
      - "**/*.ts"
      - "**/*.tsx"
      - "**/*.cts"
      - "**/*.mts"
      - "**/deno.jsonc"
      - "**/deno.lock"

  push:
    branches:
      - "*"
    paths:
      - "**/*.ts"
      - "**/*.tsx"
      - "**/*.cts"
      - "**/*.mts"
      - "**/deno.jsonc"
      - "**/deno.lock"

  workflow_dispatch:

env:
  DENO_DIR: ${{github.workspace}}/.deno

jobs:
  deno-tests:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: "ubuntu-22.04"
          - runner: "macos-11"
          - runner: "windows-2019"

    runs-on: ${{ matrix.platform.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Task
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: go-task/task
          cache: enable
          tag: "v3.33.1"

      # Deno
      - name: Install Deno
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: denoland/deno
          cache: enable
          tag: "v1.39.1"

      - if: ${{ runner.os != 'Windows' }}
        name: Cache Deno dependencies
        uses: actions/cache@v3
        with:
          key: denodeps-${{ runner.os }}-${{ hashFiles('**/deno.lock') }}
          restore-keys: denodeps-${{ runner.os }}
          path: |
            ${{env.DENO_DIR}}
            ${{github.workspace}}/node_modules

      - if: ${{ runner.os == 'Windows' }}
        name: Cache Deno dependencies
        uses: actions/cache@v3
        with:
          key: denodeps-${{ runner.os }}-${{ hashFiles('**/deno.lock') }}
          restore-keys: denodeps-${{ runner.os }}
          path: |
            ${{env.DENO_DIR}}
          # node_modules is not cached on Windows as it breaks subsequent
          # runs, probably because this folder relies on symlinks

      - name: Restore Deno dependencies
        run: task ci:deno:cache
      # /Deno

      - name: Run Deno tests
        run: task ci:deno:tests
