name: "Publish Release"
on:
  push:
    branches:
      - release
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short
  RUSTC_WRAPPER: sccache
  SCCACHE_GHA_ENABLED: true
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

jobs:
  publish-tauri:
    name: "Publish"
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: "macos-latest"
            rust_target: "x86_64-apple-darwin"
          - os: "macos-latest"
            rust_target: "aarch64-apple-darwin"
          - os: "ubuntu-latest"
            rust_target: "x86_64-unknown-linux-gnu"
          - os: "windows-latest"
            rust_target: "x86_64-pc-windows-msvc"
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Task
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: go-task/task
          cache: enable
          tag: "v3.31.0"

      - name: Setup UPX (Windows and Linux only)
        if: matrix.platform.os != 'macos-latest'
        uses: crazy-max/ghaction-upx@v3
        with:
          version: latest
          install-only: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.rust_target }}

      - name: Setup Cargo cache
        uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.2
        with:
          version: "v0.7.3"

      - name: Disable initramfs and man-db update (Ubuntu)
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo sed -i 's/yes/no/g' /etc/initramfs-tools/update-initramfs.conf
          sudo rm -f /var/lib/man-db/auto-update

      - name: Install Ubuntu dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1.3.1
        if: matrix.platform.os == 'ubuntu-latest'
        continue-on-error: true
        with:
          packages: >-
            build-essential
            curl
            file
            wget
            libgtk-3-dev
            librsvg2-dev
            libssl-dev
            libwebkit2gtk-4.0-dev
            patchelf
            libappindicator3-dev
          version: 1.0

      - name: Install macOS dependencies
        uses: maxim-lobanov/setup-xcode@v1
        if: matrix.platform.os == 'macos-latest'
        with:
          xcode-version: latest-stable

      - name: Install pnpm dependencies
        run: pnpm install --frozen-lockfile

      - uses: actions/cache/restore@v3
        id: restore-cache
        with:
          path: |
            ./server-dist
          key: cache-memos-builds-${{ github.run_id }}-${{ github.ref_name }}
          enableCrossOsArchive: true

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # the action automatically replaces \_\_VERSION\_\_ with the app version
          tagName: v__VERSION__
          releaseName: "Memospot v__VERSION__"
          releaseBody: "See the assets section below to download the app."
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.platform.rust_target }}

      - uses: actions/cache@v3
        with:
          path: |
            ./server-dist
          key: cache-memos-builds-${{ github.run_id }}
          enableCrossOsArchive: true
