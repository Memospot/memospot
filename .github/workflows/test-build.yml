name: "Test Build"
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short
  RUSTFLAGS: -Copt-level=0
  RUSTC_WRAPPER: sccache
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

jobs:
  test-tauri-build:
    name: "Test Build"
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: "macos"
            runner: "macos-11"
            rust_target: "x86_64-apple-darwin"

          - os: "macos"
            runner: "macos-11"
            rust_target: "aarch64-apple-darwin"

          - os: "linux"
            runner: "ubuntu-20.04"
            rust_target: "x86_64-unknown-linux-gnu"

          - os: "windows"
            runner: "windows-2019"
            rust_target: "x86_64-pc-windows-msvc"

    runs-on: ${{ matrix.platform.runner }}
    steps:
      - uses: actions/checkout@v4

      - name: Disable initramfs and man-db update (Ubuntu)
        if: matrix.platform.os == 'linux'
        run: |
          sudo sed -i 's/yes/no/g' /etc/initramfs-tools/update-initramfs.conf
          sudo rm -f /var/lib/man-db/auto-update

      - if: ${{ matrix.platform.os == 'linux' }}
        name: Install Ubuntu dependencies
        uses: awalsh128/cache-apt-pkgs-action@v1.3.1
        continue-on-error: true
        with:
          packages: >-
            build-essential
            curl
            file
            wget
            libgtk-3-dev
            librsvg2-dev
            libssl-dev
            libwebkit2gtk-4.0-dev
            patchelf
            libappindicator3-dev
          version: 1.0

      - if: ${{ matrix.platform.os == 'macos' }}
        name: Install macOS dependencies
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - if: ${{ matrix.platform.os != 'macos' }}
        name: Install UPX (Windows and Linux only)
        uses: crazy-max/ghaction-upx@v3
        with:
          version: latest
          install-only: true

      - name: Install Task
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: go-task/task
          cache: enable
          tag: "v3.32.0"

      - name: Install sccache
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: mozilla/sccache
          cache: enable
          tag: "v0.7.4"

      - name: Initialize sccache environment
        shell: bash
        run: |
          echo SCCACHE_CACHE=$(sccache --show-stats | grep Local | cut -d '"' -f2) >> $GITHUB_ENV
          echo DATE_STRING=$(date +'%Y%m%d') >> $GITHUB_ENV
          sccache --stop-server

      - name: Setup sccache
        uses: actions/cache@v3
        with:
          path: ${{ env.SCCACHE_CACHE }}
          key: sccache-${{ matrix.platform.runner }}-0-${{ env.DATE_STRING }}
          restore-keys: sccache-${{ matrix.platform.runner }}-0

      - name: Start sccache
        shell: bash
        working-directory: ${{ github.workspace }}
        run: sccache --start-server

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.rust_target }}

      - name: Setup Cargo cache
        uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Cache memos builds
        uses: actions/cache@v3
        with:
          path: ./server-dist
          key: cache-memosbuilds-${{ env.DATE_STRING }}
          enableCrossOsArchive: true

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__-dev
          releaseName: "Memospot v__VERSION__-dev"
          releaseBody: |
            This is a development build.

            See the assets section below to download the app.
          releaseDraft: true
          prerelease: true
          args: --target ${{ matrix.platform.rust_target }}

      - name: Cleanup sccache
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          sccache --stop-server
